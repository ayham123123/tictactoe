/******************************************************************************
ayham huq
Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>
#include <cstdlib>

using namespace std;

void drawBoard(char board[][3]) {
    system("clear");
    cout << "  1 2 3" << endl;
    for (int i = 0; i < 3; i++) {
        cout << i + 1 << " ";
        for (int j = 0; j < 3; j++) {
            cout << board[i][j];
            if (j != 2) {
                cout << "|";
            }
        }
        cout << endl;
        if (i != 2) {
            cout << "  -----" << endl;
        }
    }
}

bool checkWin(char board[][3], char player) {
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
            return true;
        }
    }
    for (int i = 0; i < 3; i++) {
        if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {
            return true;
        }
    }
    
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
        return true;
    }
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
        return true;
    }
    return false;
}

int main() {
    char board[3][3] = {{'1', '2', '3'}, {'4', '5', '6'}, {'7', '8', '9'}};
    int numTurns = 0;
    char player = 'X';
    int row, col;

    while (numTurns < 9) {
        drawBoard(board);
        cout << "Player " << player << "'s turn" << endl;
        cout << "Enter row (1-3): ";
        cin >> row;
        cout << "Enter column (1-3): ";
        cin >> col;
        row--;
        col--;

        if (board[row][col] != 'X' && board[row][col] != 'O') {
            board[row][col] = player;
            if (checkWin(board, player)) {
                drawBoard(board);
                cout << "Player " << player << " wins!" << endl;
                return 0;
            }
            player = (player == 'X') ? 'O' : 'X';
            numTurns++;
        } else {
            cout << "That spot is already taken. Try again." << endl;
        }
    }

    drawBoard(board);
    cout << "It's a draw!" << endl;

    return 0;
}

